/*
Implement an autocomplete system. That is, given a query string s and a set of all possible query strings, return all strings in the set that have s as a prefix.

For example, given the query string de and the set of strings [dog, deer, deal], return [deer, deal].

Hint: Try preprocessing the dictionary into a more efficient data structure to speed up queries.
*/

import java.util.*;

public class PrefixMatch{
    public static void main(String args[]){
        String search = "de";
        List<String> output = new ArrayList<String>();
        boolean matched = true;
        String [] list = {"deer","deloitte","data","deeper","dell","deque","deel","deep","deer"};
        for(int i=0;i<list.length;i++){
            matched=true;
            for(int j=0;j<search.length();j++){
                if(list[i].charAt(j)==search.charAt(j)){
                    
                    
                }
                else{
                    matched = false;
                
                }
            }
            if(matched == true){
                output.add(list[i]);
            }
        }
        for(String s : output){
            System.out.println(s);
        }
        
    }
}
