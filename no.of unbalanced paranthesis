import java.util.Stack;

public class ClosedParanthesis {

    public static void main(String args[]){
        Stack<Character> stack = new Stack<>();
        boolean insideIf = false;
        int count=0;
        boolean checkValidity=true;
        String input = "(})";

        for(int i=0;i<input.length();i++){
        
            if(input.charAt(i)=='(' || input.charAt(i)=='{' || input.charAt(i)=='['){
                stack.push(input.charAt(i));
                insideIf=true;
            }
            
            if(!stack.isEmpty()&&input.charAt(i)==')'){
        
                if(!insideIf&&stack.peek()=='('){
                    stack.pop();
                    count++;
                }
                
            }
            
            if(input.charAt(i)=='}'&&!stack.isEmpty()){
                
                if(!insideIf&&stack.peek()=='{'){
                    stack.pop();
                    count++;
                }
                
            }
            
            else{
                checkValidity = false;
            }
            
            insideIf=false;
            
               
        }
        if(stack.isEmpty() && checkValidity){
            System.out.println("true");
        
        }
        else {
            System.out.println("false with "+(input.length()-(2*count))+" Unbalanced chars");
        }
    }

}














