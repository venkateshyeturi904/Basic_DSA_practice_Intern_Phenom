import java.util.*;

public class MaxHeap{

     static List<Integer> array = new ArrayList<>(Arrays.asList(4,8,1,99,7,54,10,876));

     
     public static void main(String []args){
        // System.out.println("maxHeap is :");
        System.out.println(maxHeap(array));
        // System.out.println("MinHeap is :");
        System.out.println(minHeap(array));
        insert(0);
        System.out.println(minHeap(array));
        System.out.println("maximum ->"+findMax());
        System.out.println("minimum ->"+findMin());
        
        
     }
     public static List<Integer> maxHeap(List<Integer> array){
         
         int n=array.size();
         for(int i = n/2 - 1 ; i>=0 ; i--){
             heapify(array,i,n,true);
         }
         return array;
        
         
     }
     public static List<Integer> minHeap(List<Integer> array){
        
         int n=array.size();
         for(int i = n/2 -1;i>=0;i--){
             heapify(array,i,n,false);
         }
         return array;
        
     }
     public static void heapify(List<Integer> array , int i,int n,boolean isMax){
         int largest = i;
         int smallest = i;
         int left = 2*i+1;
         int right = 2*i+2;
         
         if(isMax){
             if(left<n&&array.get(largest)<array.get(left)){
                 largest=left;
             }
             
             if(right<n&&array.get(largest)<array.get(right)){
                 largest=right;
             }
             
             if(largest!=i){
                
                Collections.swap(array,largest,i);
                 heapify(array,largest,n,true);
             }
         }
         else {
             if(left<n&&array.get(smallest)>array.get(left)){
             smallest=left;
             }
             if(right<n&&array.get(smallest)>array.get(right)){
                 smallest=right;
             }
             if(smallest!=i){
                
                Collections.swap(array,smallest,i);
                 heapify(array,smallest,n,false);
             }
         }
         
         
         
     }
    
     
     public static void insert(int ins){
         array.add(ins);
         
     }
     public static int findMax(){
         return maxHeap(array).get(0);
     }
     public static int findMin(){
         return minHeap(array).get(0);
     }
}
